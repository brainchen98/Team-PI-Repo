/*****************************************************************
slave2.cpp
Team Pi Slave 2 Code

Author: Brian Chen
Last updated by Brian on 29/11/2014 6:41:51 PM

Copyright (c) 2014 Team Pi
*****************************************************************/

#include <WProgram.h>

#define UNLOCK_PIN 0
#define TSOP_COUNT 24

#define ISR_INTERVAL 25		//40kHz

// TSOP1140 Pin numbers
// extern const uint8_t tsop_pins[TSOP_COUNT] = {	2,  28,  2,  3,  4,  5,  6,  7,
// 		                             a           8,  9,  10, 11, 12, 13, 14, 15,
// 		                                        16, 17, 18, 19, 20, 21, 22, 23 };
extern const uint8_t tsop_pins[] = {
	1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 
    11, 12, 14, 15, 16, 17, 20, 21, 22, 23 
};

IntervalTimer ISR_Timer;
volatile uint32_t isr_count = 0;

/**filter********************************************************/
#define K1 1
#define K2 9/10
#define K3 8/10
#define K4 1/10

volatile uint16_t data[TSOP_COUNT] = {0};
uint16_t filteredData[TSOP_COUNT] = {0};

void ISR();

inline void initTSOPS(){
	pinMode(UNLOCK_PIN, OUTPUT);
	for (uint8_t i = 0; i < TSOP_COUNT; i++){
		pinMode(tsop_pins[i], INPUT);
	}
}

extern "C" int main(){
	Serial.begin(115200);
	initTSOPS();
	ISR_Timer.begin(ISR, ISR_INTERVAL);
	interrupts();	// enable interrupts
	digitalWriteFast(UNLOCK_PIN, HIGH);
	while(1){
		elapsedMillis elapsedUnlock = 0;

		if (isr_count % 80 == 0){
			noInterrupts();

			isr_count = 0;

			uint8_t max = 0, maxIndex = 0;
			for (uint8_t i = 0; i < TSOP_COUNT; i++){
				filteredData[i] =   K1 * data[i]
								  + K2 * (data[(i - 1) % TSOP_COUNT] + data[(i + 1) % TSOP_COUNT])
								  + K3 * (data[(i - 2) % TSOP_COUNT] + data[(i + 2) % TSOP_COUNT])
								  + K4 * (data[(i - 3) % TSOP_COUNT] + data[(i + 3) % TSOP_COUNT]);
				if (filteredData[i] > max){
					max = filteredData[i];
					maxIndex = i;
				}
			}

			for (uint8_t i = 0; i < TSOP_COUNT; i++){
				Serial.print(filteredData[i]);
				Serial.print('\t');
				data[i] = 0;
			}
			Serial.printf("angle: %d\n", maxIndex * 360 / TSOP_COUNT);

			if (isr_count == 20000){
				digitalWriteFast(UNLOCK_PIN, LOW);
				delayMicroseconds(200);
				digitalWriteFast(UNLOCK_PIN, HIGH);
			}	

			interrupts();	
		}		
	}
}

void ISR(){
	isr_count++;	
	for (uint8_t i = 0; i < TSOP_COUNT; i++){
		data[i] += !digitalReadFast(tsop_pins[i]);
	}
}